import{_ as a,p as n,q as s,a1 as t}from"./framework-96b046e1.js";const e={},c=t(`<h1 id="lodash-intersection" tabindex="-1"><a class="header-anchor" href="#lodash-intersection" aria-hidden="true">#</a> lodash intersection</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>创建唯一值的数组，这个数组包含所有给定数组都包含的元素。</p></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">intersection</span><span class="token punctuation">(</span><span class="token punctuation">[</span>arrays<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>创建唯一值的数组，这个数组包含所有给定数组都包含的元素，使用 <code>SameValueZero</code> 进行相等性比较。（注：可以理解为给定数组的交集）</p><h2 id="引入版本" tabindex="-1"><a class="header-anchor" href="#引入版本" aria-hidden="true">#</a> 引入版本</h2><p>0.1.0</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ol><li><code>[arrays]</code> (...Array): 待检查的数组。</li></ol><h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>(Array): 返回一个包含所有传入数组交集元素的新数组。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">intersection</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [2]</span>
</code></pre></div>`,13),p=[c];function o(i,r){return n(),s("div",null,p)}const l=a(e,[["render",o],["__file","intersection.html.vue"]]);export{l as default};
