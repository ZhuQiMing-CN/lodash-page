import{_ as a,p as s,q as n,a1 as e}from"./framework-96b046e1.js";const t={},c=e(`<h1 id="lodash-frompairs" tabindex="-1"><a class="header-anchor" href="#lodash-frompairs" aria-hidden="true">#</a> lodash fromPairs</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>返回一个由键值对 <code>pairs</code> 构成的对象。</p></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">fromPairs</span><span class="token punctuation">(</span>pairs<span class="token punctuation">)</span>
</code></pre></div><p>与 <code>_.toPairs</code> 正好相反；这个方法返回一个由键值对 <code>pairs</code> 构成的对象。</p><h2 id="引入版本" tabindex="-1"><a class="header-anchor" href="#引入版本" aria-hidden="true">#</a> 引入版本</h2><p>4.0.0</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ol><li><code>pairs</code> (Array): 键值对 <code>pairs</code>。</li></ol><h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>(Object): 返回一个新对象。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">fromPairs</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;fred&#39;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;barney&#39;</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; { &#39;fred&#39;: 30, &#39;barney&#39;: 40 }</span>
</code></pre></div>`,13),o=[c];function p(r,i){return s(),n("div",null,o)}const l=a(t,[["render",p],["__file","fromPairs.html.vue"]]);export{l as default};
