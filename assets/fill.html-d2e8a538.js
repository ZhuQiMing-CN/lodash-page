import{_ as a,p as n,q as s,a1 as t}from"./framework-96b046e1.js";const p={},e=t(`<h1 id="lodash-fill" tabindex="-1"><a class="header-anchor" href="#lodash-fill" aria-hidden="true">#</a> lodash fill</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>使用 <code>value</code> 值来填充（替换）<code>array</code>。</p></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token punctuation">[</span>start<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>end<span class="token operator">=</span>array<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>使用 <code>value</code> 值来填充（替换）<code>array</code>，从 <code>start</code> 位置开始, 到 <code>end</code> 位置结束（但不包含 <code>end</code> 位置）。</p><p><strong>Note:</strong> 这个方法会改变 <code>array</code>（注：不是创建新数组）。</p><h2 id="引入版本" tabindex="-1"><a class="header-anchor" href="#引入版本" aria-hidden="true">#</a> 引入版本</h2><p>3.2.0</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ol><li><code>array</code> (Array): 要填充改变的数组。</li><li><code>value</code> (*): 填充给 array 的值。</li><li><code>[start=0]</code> (Number): 开始位置（默认0）。</li><li><code>[end=array.length]</code> (Number): 结束位置（默认 array.length）。</li></ol><h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>(Array): 返回 <code>array</code>。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
_<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [&#39;a&#39;, &#39;a&#39;, &#39;a&#39;]</span>
 
_<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [2, 2, 2]</span>
 
_<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [4, &#39;*&#39;, &#39;*&#39;, 10]</span>
</code></pre></div>`,14),c=[e];function o(l,u){return n(),s("div",null,c)}const r=a(p,[["render",o],["__file","fill.html.vue"]]);export{r as default};
