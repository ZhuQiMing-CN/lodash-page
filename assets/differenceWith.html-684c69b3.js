import{_ as a,p as n,q as s,a1 as t}from"./framework-96b046e1.js";const e={},p=t(`<h1 id="lodash-differencewith" tabindex="-1"><a class="header-anchor" href="#lodash-differencewith" aria-hidden="true">#</a> lodash differenceWith</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>接受一个 <code>comparator</code> ，它调用比较 <code>array</code> ，<code>values</code> 中的元素。</p></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">differenceWith</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">[</span>values<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>comparator<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>这个方法类似 <code>_.difference</code> ，除了它接受一个 <code>comparator</code> （注：比较器），它调用比较 <code>array</code> ，<code>values</code> 中的元素。结果值是从第一数组中选择。<code>comparator</code> 调用参数有两个：(arrVal, othVal)。</p><p><strong>Note:</strong> 不像 <code>_.pullAllWith</code> ，这个方法会返回一个新数组。</p><h2 id="引入版本" tabindex="-1"><a class="header-anchor" href="#引入版本" aria-hidden="true">#</a> 引入版本</h2><p>4.0.0</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ol><li><code>array</code> (Array): 要检查的数组。</li><li><code>[values]</code> (...Array): 排除的值。</li><li><code>[iteratee=_.identity]</code> (Function): comparator 调用每个元素。</li></ol><h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>(Array): 返回一个过滤值后的新数组。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> objects <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;x&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;y&#39;</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;x&#39;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;y&#39;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
_<span class="token punctuation">.</span><span class="token function">differenceWith</span><span class="token punctuation">(</span>objects<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;x&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;y&#39;</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> _<span class="token punctuation">.</span>isEqual<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [{ &#39;x&#39;: 2, &#39;y&#39;: 1 }]</span>
</code></pre></div>`,14),o=[p];function c(r,i){return n(),s("div",null,o)}const u=a(e,[["render",c],["__file","differenceWith.html.vue"]]);export{u as default};
