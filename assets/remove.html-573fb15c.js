import{_ as a,p as n,q as s,a1 as e}from"./framework-96b046e1.js";const t={},p=e(`<h1 id="lodash-remove" tabindex="-1"><a class="header-anchor" href="#lodash-remove" aria-hidden="true">#</a> lodash remove</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>移除数组中断言为真的所有元素</p></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">[</span>predicate<span class="token operator">=</span>_<span class="token punctuation">.</span>identity<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>移除数组中 <code>predicate</code>（断言）返回为真值的所有元素，并返回移除元素组成的数组。<code>predicate</code>（断言） 会传入 3 个参数： (value, index, array)。</p><p><strong>Note:</strong> 和 <code>_.filter</code> 不同, 这个方法会改变数组 <code>array</code>。使用 <code>_.pull</code> 来根据提供的 <code>value</code> 值从数组中移除元素。</p><h2 id="引入版本" tabindex="-1"><a class="header-anchor" href="#引入版本" aria-hidden="true">#</a> 引入版本</h2><p>2.0.0</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ol><li><code>array</code> (Array): 要修改的数组。</li><li><code>[predicate=_.identity]</code> (Array|Function|Object|String): 每次迭代调用的函数。</li></ol><h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>(Array): 返回移除元素组成的新数组。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> evens <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [1, 3]</span>
 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>evens<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [2, 4]</span>
</code></pre></div>`,14),o=[p];function c(r,i){return n(),s("div",null,o)}const u=a(t,[["render",c],["__file","remove.html.vue"]]);export{u as default};
