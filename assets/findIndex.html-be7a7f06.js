import{_ as n,p as a,q as s,a1 as t}from"./framework-96b046e1.js";const p={},e=t(`<h1 id="lodash-findindex" tabindex="-1"><a class="header-anchor" href="#lodash-findindex" aria-hidden="true">#</a> lodash findIndex</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>返回第一个通过 <code>predicate</code> 判断为真值的元素的索引值。</p></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">[</span>predicate<span class="token operator">=</span>_<span class="token punctuation">.</span>identity<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>fromIndex<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>该方法类似 <code>_.find</code>，区别是该方法返回第一个通过 <code>predicate</code> 判断为真值的元素的索引值（index），而不是元素本身。</p><h2 id="引入版本" tabindex="-1"><a class="header-anchor" href="#引入版本" aria-hidden="true">#</a> 引入版本</h2><p>1.1.0</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ol><li><code>array</code> (Array): 要搜索的数组。</li><li><code>[predicate=_.identity]</code> (Array|Function|Object|String): 这个函数会在每一次迭代调用。</li><li><code>[fromIndex=0]</code> (Number): The index to search from.</li></ol><h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>(Number): 返回找到元素的 索引值（index），否则返回 <code>-1</code>。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> users <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token string-property property">&#39;user&#39;</span><span class="token operator">:</span> <span class="token string">&#39;barney&#39;</span><span class="token punctuation">,</span>  <span class="token string-property property">&#39;active&#39;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string-property property">&#39;user&#39;</span><span class="token operator">:</span> <span class="token string">&#39;fred&#39;</span><span class="token punctuation">,</span>    <span class="token string-property property">&#39;active&#39;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string-property property">&#39;user&#39;</span><span class="token operator">:</span> <span class="token string">&#39;pebbles&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;active&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
 
_<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> o<span class="token punctuation">.</span>user <span class="token operator">==</span> <span class="token string">&#39;barney&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 0</span>
 
<span class="token comment">// The \`_.matches\` iteratee shorthand.</span>
_<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;user&#39;</span><span class="token operator">:</span> <span class="token string">&#39;fred&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;active&#39;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 1</span>
 
<span class="token comment">// The \`_.matchesProperty\` iteratee shorthand.</span>
_<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 0</span>
 
<span class="token comment">// The \`_.property\` iteratee shorthand.</span>
_<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 2</span>
</code></pre></div>`,13),o=[e];function c(r,i){return a(),s("div",null,o)}const u=n(p,[["render",c],["__file","findIndex.html.vue"]]);export{u as default};
