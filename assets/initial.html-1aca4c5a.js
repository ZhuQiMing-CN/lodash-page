import{_ as a,p as n,q as s,a1 as e}from"./framework-96b046e1.js";const t={},c=e(`<h1 id="lodash-initial" tabindex="-1"><a class="header-anchor" href="#lodash-initial" aria-hidden="true">#</a> lodash initial</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>获取数组 <code>array</code> 中除了最后一个元素之外的所有元素。</p></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">initial</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
</code></pre></div><p>获取数组 <code>array</code> 中除了最后一个元素之外的所有元素（注：去除数组 array 中的最后一个元素）。</p><h2 id="引入版本" tabindex="-1"><a class="header-anchor" href="#引入版本" aria-hidden="true">#</a> 引入版本</h2><p>0.1.0</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ol><li><code>array</code> (Array): 要查询的数组。</li></ol><h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>(Array): 返回截取后的数组 <code>array</code>。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">initial</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [1, 2]</span>
</code></pre></div>`,13),i=[c];function o(r,p){return n(),s("div",null,i)}const l=a(t,[["render",o],["__file","initial.html.vue"]]);export{l as default};
